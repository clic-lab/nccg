<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.mr.lambda.LogicalConstant"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.mr.language.type.ComplexType"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.mr.language.type.RecursiveComplexType"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.mr.lambda.Variable"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.mr.lambda.Lambda"/>
<fullyQualifiedTypeName name="edu.uw.cs.lil.amr.parser.AmrParsingFilter"/>
<fullyQualifiedTypeName name="edu.uw.cs.lil.amr.parser.IsValidAmr"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.utils.log.LogLevel"/>
<fullyQualifiedTypeName name="edu.uw.cs.lil.amr.parser.rules.coordination.CoordinationServices"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="com.hazelcast.cluster.impl.JoinRequest"/>
<fullyQualifiedTypeName name="edu.uw.cs.lil.amr.lambda.AMRServices"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.mr.lambda.LogicLanguageServices"/>
<fullyQualifiedTypeName name="java.util.Queue"/>
<fullyQualifiedTypeName name="java.util.Stack"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.parser.ff.shiftreduce.neuralparser.LocalEnsembleNeuralDotProductShiftReduceParser"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.parser.ff.shiftreduce.neuralparser.PerceptronLayer"/>
<fullyQualifiedTypeName name="com.google.common.util.concurrent.AtomicDouble"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.parser.ff.shiftreduce.nonlocal.features.HeadBufferWordAndPOSFeature"/>
<fullyQualifiedTypeName name="java.util.IntSummaryStatistics"/>
<fullyQualifiedTypeName name="org.apache.lucene.util.ArrayUtil"/>
<fullyQualifiedTypeName name="java.lang.Double"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.parser.ccg.rules.LexicalResult"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.base.hashvector.IHashVector"/>
<fullyQualifiedTypeName name="org.nd4j.linalg.api.ndarray.INDArray"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.parser.ff.shiftreduce.neuralparser.NeuralActionEmbeddingMixer"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.parser.graph.IGraphParser"/>
<fullyQualifiedTypeName name="java.text.DecimalFormat"/>
<fullyQualifiedTypeName name="java.math.RoundingMode"/>
<fullyQualifiedTypeName name="org.nd4j.linalg.api.buffer.DataBuffer.AllocationMode"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.parser.ff.shiftreduce.neuralparser.SimpleAMRShiftReduceParser"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.utils.math.LogSumExp"/>
<fullyQualifiedTypeName name="org.aopalliance.reflect.Method"/>
<fullyQualifiedTypeName name="java.lang.reflect.Method"/>
<fullyQualifiedTypeName name="java.io.File"/>
<fullyQualifiedTypeName name="org.deeplearning4j.util.ModelSerializer"/>
<fullyQualifiedTypeName name="java.io.OutputStream"/>
<fullyQualifiedTypeName name="java.nio.file.Files"/>
<fullyQualifiedTypeName name="java.io.DataOutputStream"/>
<fullyQualifiedTypeName name="java.nio.file.Paths"/>
<fullyQualifiedTypeName name="java.io.BufferedReader"/>
<fullyQualifiedTypeName name="java.io.FileReader"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.util.stream.Collectors"/>
<fullyQualifiedTypeName name="edu.cornell.cs.nlp.spf.parser.ccg.shiftreduce.steps.ShiftReduceLexicalStep"/>
<fullyQualifiedTypeName name="org.nd4j.linalg.factory.Nd4j"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.function.Supplier"/>
<fullyQualifiedTypeName name="java.util.function.BiConsumer"/>
<fullyQualifiedTypeName name="java.util.stream.IntStream"/>
<fullyQualifiedTypeName name="java.util.stream.Stream"/>
<fullyQualifiedTypeName name="java.io.PrintWriter"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="com.google.common.base.Joiner"/>
<fullyQualifiedTypeName name="com.sun.istack.internal.logging.Logger"/>
</qualifiedTypeNameHistroy>
