's :- NP[x]/(N[x]\(N[x]/N[x]))\NP : (lambda $0:e (lambda $2:<<<e,t>,<e,t>>,<e,t>> (a:<id,<<e,t>,e>> na:id ($2 (lambda $4:<e,t> (lambda $1:e (and:<t*,t> ($4 $1) (c_ARG1:<e,<e,t>> $1 $0))))))))
's :- NP[x]/N[x]\NP : (lambda $0:e (lambda $1:<e,t> (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG0:<e,<e,t>> $2 $0))))))
's :- NP[x]/N[x]\NP : (lambda $0:e (lambda $1:<e,t> (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> ($1 $2) (c_poss:<e,<e,t>> $2 $0))))))
's :- NP[x]/N[x]\NP : (lambda $0:e (lambda $2:<e,t> (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG0:<e,<e,t>> $1 $0))))))
's :- N[x]/N[x]\NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_poss:<e,<e,t>> $1 $0)))))
's :- N[x]/N[x]\NP[sg] : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG1:<e,<e,t>> $2 $0)))))
's :- N[x]/N[x]\NP[sg] : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_location:<e,<e,t>> $2 $0)))))
's :- N[x]/N[x]\NP[sg] : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_poss:<e,<e,t>> $2 $0)))))
's :- N[x]/N[x]\NP[sg] : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_poss:<e,<e,t>> $1 $0)))))
, :- PUNCT
-- :- PUNCT
. :- PUNCT
// 030210 :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $20:e (and:<t*,t> (date-entity:<e,t> $20) (c_day:<e,<i,t>> $20 10:i) (c_month:<e,<i,t>> $20 2:i) (c_year:<e,<i,t>> $20 2003:i))))
// 13000 :- I : 13000:i
// 36 :- I : 36:i
// 38 :- NP[pl]/N[pl] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> ($0 $1) (c_quant:<e,<i,t>> $1 38:i)))))
// 450000 :- NP : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (date-entity:<e,t> $0) (c_year:<e,<i,t>> $0 1945:i))))
// 50 :- I : 50:i
// 6 :- I : 6:i
// May 5 2008 :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $11:e (and:<t*,t> (date-entity:<e,t> $11) (c_year:<e,<i,t>> $11 2008:i) (c_month:<e,<i,t>> $11 5:i) (c_day:<e,<i,t>> $11 5:i))))
// November 27 , 2001 :- NP : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (date-entity:<e,t> $0) (c_month:<e,<i,t>> $0 11:i) (c_day:<e,<i,t>> $0 27:i) (c_year:<e,<i,t>> $0 2001:i))))
// against :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (oppose-01:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 $0)))))
// dossier :- N[sg] : (lambda $0:e (dossier:<e,t> $0))
// is :- S/S : (lambda $0:<e,t> $0)
// is :- S\NP/S : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> (c_ARG0:<e,<e,t>> $2 $1) ($0 $2)))))
// that :- S\S/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG0-of:<e,<e,t>> $1 $0)))))
2 week :- N[x]/N[x] : (lambda $1:<e,t> (lambda $0:e (and:<t*,t> ($1 $0) (c_duration:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (temporal-quantity:<e,t> $0) (c_quant:<e,<i,t>> $0 2:i) (c_unit:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id week:<e,t>)))))))))
; :- KEY\N : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id $0))
; :- KEY\NP[sg] : (lambda $0:e $0)
; :- KEY\S : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id $0))
A :- NP[sg]/N[sg] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id $0))
ATMs :- N[pl] : atm:<e,t>
Abdullah :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (name:<e,t> $0) (c_op:<e,<txt,t>> $0 Abdullah:txt))))))))
Adel :- N[sg] : (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Adel:txt)))))))
Afghanistan :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Afghanistan:txt))))))))
Afghanistan :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (name:<e,t> $2) (c_op:<e,<txt,t>> $2 Afghanistan:txt))))))))
Al Jihad :- N[sg]\N[sg] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_name:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (name:<e,t> $2) (c_op:<e,<txt,t>> $2 al-Jihad:txt))))))))
Al Zayat :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (person:<e,t> $1) (c_name:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (name:<e,t> $0) (c_op:<e,<txt,t>> $0 al-Zayat:txt))))))))
Alstom :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (company:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Alstom:txt))))))))
Amnesty International :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (organization:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Amnesty++International:txt))))))))
Amnesty International :- NP[sg] : (ref:<id,e> na:id)
Association of Southeast Asian Nations :- N[sg] : (lambda $0:e (and:<t*,t> (organization:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Association++of++Southeast++Asian++Nations:txt)))))))
Australia :- NP[sg] : (ref:<id,e> na:id)
Australian :- N[x]/N[x] : (lambda $1:<e,t> (lambda $4:e (and:<t*,t> ($1 $4) (c_ARG1:<e,<e,t>> $4 (a:<id,<<e,t>,e>> na:id (lambda $3:e (and:<t*,t> (country:<e,t> $3) (c_name:<e,<e,t>> $3 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Australia:txt))))))))))))
Bangkok :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (city:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Bangkok:txt))))))))
Bank of America :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (company:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Bank++of++America:txt))))))))
Bolton 's statement :- NP[sg] : (ref:<id,e> na:id)
Bolton :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Bolton:txt))))))))
Castro :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Castro:txt))))))))
China :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 China:txt))))))))
Costa Rica :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Costa++Rica:txt))))))))
Cuba :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Cuba:txt))))))))
Drug burning :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_purpose:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (burn-01:<e,t> $2) (c_ARG1:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id drug:<e,t>)))))))))
Earlier :- S\S/(S\S) : (lambda $0:<<e,t>,<e,t>> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_time:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id ($0 (lambda $3:e (and:<t*,t> (early:<e,t> $3) (c_degree:<e,<e,t>> $3 (a:<id,<<e,t>,e>> na:id more:<e,t>)))))))))))
Egyptian :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (country:<e,t> $1) (c_name:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Egypt:txt))))))))))))
Foreign Ministry :- N[sg] : (lambda $0:e (and:<t*,t> (government-organization:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Foreign++Ministry:txt)))))))
Foreign Office :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $3:e (and:<t*,t> (government-organization:<e,t> $3) (c_name:<e,<e,t>> $3 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Foreign++Office:txt))))))))
France -LRB- FR -RRB- :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 France:txt))))))))
IAEA :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (organization:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 IAEA:txt))))))))
In :- S\S/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_location:<e,<e,t>> $1 $0)))))
In :- S\S/NP : (lambda $1:e (lambda $2:<e,t> (lambda $0:e (and:<t*,t> ($2 $0) (c_manner:<e,<e,t>> $0 $1)))))
International :- S : international:<e,t>
Internet :- N[sg] : internet:<e,t>
Iran :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Iran:txt))))))))
Iranian :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_location:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (country:<e,t> $2) (c_name:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id (lambda $3:e (and:<t*,t> (name:<e,t> $3) (c_op:<e,<txt,t>> $3 Iran:txt))))))))))))
Iraq :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Iraq:txt))))))))
Iraq :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $14:e (and:<t*,t> (country:<e,t> $14) (c_name:<e,<e,t>> $14 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Iraq:txt))))))))
Iraq :- NP[sg] : (ref:<id,e> na:id)
Iraqi :- N[x]/N[x] : (lambda $1:<e,t> (lambda $0:e (and:<t*,t> ($1 $0) (c_location:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (country:<e,t> $1) (c_name:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Iraq:txt))))))))))))
Islamic :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (religious-group:<e,t> $2) (c_name:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id (lambda $3:e (and:<t*,t> (name:<e,t> $3) (c_op:<e,<txt,t>> $3 Islam:txt))))))))))))
Israelis :- N[pl] : (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_mod:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (country:<e,t> $2) (c_name:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id (lambda $3:e (and:<t*,t> (name:<e,t> $3) (c_op:<e,<txt,t>> $3 Israel:txt)))))))))))
It :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (it:<e,t> $0)))
It :- NP[sg] : (a:<id,<<e,t>,e>> na:id it:<e,t>)
It is :- A/S : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id $0))
Japan :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Japan:txt))))))))
Japanese :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (country:<e,t> $1) (c_name:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (name:<e,t> $0) (c_op:<e,<txt,t>> $0 Japan:txt))))))))))))
Jimmy Carter :- N[sg] : (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Jimmy++Carter:txt)))))))
John Williams :- N[sg] : (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 John++Williams:txt)))))))
Mohammad Farooq :- N[sg] : (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Mohammad++Farooq:txt)))))))
Most :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_quant:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id most:<e,t>)))))
Most :- N[x]/N[x] : (lambda $1:<e,t> (lambda $0:e (and:<t*,t> ($1 $0) (c_mod:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id most:<e,t>)))))
Myanmar :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Myanmar:txt))))))))
Myanmar :- NP[sg] : (ref:<id,e> na:id)
Naif Arab Academy for Security Sciences :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (university:<e,t> $1) (c_name:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (name:<e,t> $2) (c_op:<e,<txt,t>> $2 Naif++Arab++Academy++for++Security++Sciences:txt))))))))
New Light of Myanmar :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_name:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (name:<e,t> $2) (c_op:<e,<txt,t>> $2 New++Light++of++Myanmar:txt))))))))
Newspaper :- N[sg] : (lambda $0:e (newspaper:<e,t> $0))
No :- NP[x]/N[x] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> ($0 $1) (c_polarity:<e,<e,t>> $1 -:e)))))
North Korea :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 North++Korea:txt))))))))
North Korea :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (country:<e,t> $1) (c_name:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (name:<e,t> $2) (c_op:<e,<txt,t>> $2 North++Korea:txt))))))))
Officially :- S/S : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_manner:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id official:<e,t>)))))
Pervez Musharraf :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Pervez++Musharraf:txt))))))))
Police :- N[nb] : (lambda $0:e (police:<e,t> $0))
President :- N[sg]\(N[sg]/N[sg]) : (lambda $1:<<e,t>,<e,t>> (lambda $0:e (and:<t*,t> (have-org-role-91:<e,t> $0) (c_ARG2:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id ($1 (lambda $3:e (president:<e,t> $3))))))))
Raghad Hussein :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Raghad++Hussein:txt))))))))
Raghad Hussein :- N[sg] : (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Raghad++Hussein:txt)))))))
Russian Federation -LRB- RU -RRB- :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Russian++Federation:txt))))))))
Saddam Hussein :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Saddam++Hussein:txt))))))))
Scientists :- N[pl] : (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_ARG0-of:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (have-org-role-91:<e,t> $1) (c_ARG2:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (scientist:<e,t> $2))))))))))
Singapore :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Singapore:txt))))))))
Some :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_quant:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id some:<e,t>))))) 
South Korea :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 South++Korea:txt))))))))
South Korean :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 South++Korea:txt))))))))
Taiwan :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Taiwan:txt))))))))
The :- NP[sg]/N[nb] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id $0))
The :- NP[x]/N[x] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id $0))
The :- S/S : (lambda $0:<e,t> $0)
The China Times :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (publication:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 The++China++Times:txt))))))))
There will be :- A/NP : (lambda $0:e $0)
They :- NP[pl] : (a:<id,<<e,t>,e>> na:id they:<e,t>)
UN :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (organization:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 UN:txt))))))))
US :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 United++States:txt))))))))
United Jihad Council :- N[sg] : (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 United++Jihad++Council:txt)))
Vietnam :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Vietnam:txt))))))))
Vietnam :- NP[sg] : (ref:<id,e> na:id)
Vietnam based :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_ARG1-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (base-01:<e,t> $2) (c_location:<e,<e,t>> $2 (ref:<id,e> na:id)))))))))
Witnesses :- N[pl]/(N[pl]\N[pl]) : (lambda $0:<<e,t>,<e,t>> (lambda $1:e (and:<t*,t> (person:<e,t> $1) (c_ARG0-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id ($0 witness-01:<e,t>))))))
Zawahiri :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (name:<e,t> $2) (c_op:<e,<txt,t>> $2 Zawahiri:txt))))))))
Zimbabwe :- NP[sg] : (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (country:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 Zimbabwe:txt))))))))
a :- NP[sg]/N[sg] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id $0))
a :- NP[sg]/N[sg] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id (lambda $1:e ($0 $1))))
a state of :- N[x]/N[x] : (lambda $0:<e,t> $0)
able :- S\NP[x]/(S\NP[x]) : (lambda $2:<e,<e,t>> (lambda $3:e (lambda $1:e (and:<t*,t> ($2 $3 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (possible:<e,t> $0))))))))
activist :- N[sg] : (lambda $0:e (and:<t*,t> (c_ARG0-of:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (have-org-role-91:<e,t> $1) (c_ARG2:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (activist:<e,t> $2)))))))) (person:<e,t> $0)))
after :- S\S\(S\S)/NP : (lambda $1:e (lambda $2:<<e,t>,<e,t>> (lambda $4:<e,t> (lambda $3:e (and:<t*,t> ($4 $3) (c_time:<e,<e,t>> $3 (a:<id,<<e,t>,e>> na:id ($2 (lambda $4:e (and:<t*,t> (after:<e,t> $4) (c_op1:<e,<e,t>> $4 $1)))))))))))
against :- S/NP : (lambda $0:e (lambda $2:e (and:<t*,t> (oppose-01:<e,t> $2) (c_ARG1:<e,<e,t>> $2 $0))))
against :- S\S/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG2:<e,<e,t>> $1 $0)))))
air :- N[nb] : air:<e,t>
all :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_quant:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (all:<e,t> $0)))))))
all :- N[x]/N[x] : (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_quant:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (all:<e,t> $0)))))))
ally :- N[sg] : ally-01:<e,t>
also :- S/S : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id also:<e,t>)))))
an :- NP[sg]/N[sg] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id $0))
and :- C : conj:e
announced :- S\NP : (lambda $0:e (lambda $1:e (and:<t*,t> (announce-01:<e,t> $1) (c_ARG0:<e,<e,t>> $1 $0))))
announced :- S\NP : (lambda $1:e (lambda $0:e (and:<t*,t> (announce-01:<e,t> $0) (c_ARG0:<e,<e,t>> $0 $1))))
announces :- S\NP[sg]/S : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> (announce-01:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id $0))))))
anti terrorism :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_ARG2:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (oppose-01:<e,t> $2) (c_ARG1:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id terrorism:<e,t>)))))))))
any :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id any:<e,t>)))))
applies :- S\NP[sg]/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (apply-02:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 $0)))))
are :- S\NP/(S\NP) : (lambda $0:<e,<e,t>> $0)
are :- S\NP[pl]/N[pl] : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (c_domain:<e,<e,t>> $2 $1)))))
as :- S\S/S : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) ($0 $2)))))
asked :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (ask-02:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG2:<e,<e,t>> $2 $0)))))
assist :- S : (lambda $0:e (and:<t*,t> (assist-01:<e,t> $0) (c_ARG0:<e,<e,t>> $0 (ref:<id,e> na:id)) (c_ARG1:<e,<e,t>> $0 (ref:<id,e> na:id))))
at :- S\S/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_location:<e,<e,t>> $1 $0)))))
attachment :- N[sg] : attachment:<e,t>
attributed :- S\NP : (lambda $0:e (lambda $1:e (and:<t*,t> (attribute-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
banned :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_ARG1-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (ban-01:<e,t> $0)))))))
be :- S/S : (lambda $0:<e,t> $0)
because :- S\S/(N\N) : (lambda $0:<<e,t>,<e,t>> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG1-of:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id ($0 cause-01:<e,t>)))))))
been :- S\N/(N[x]\N[x]) : (lambda $0:<<e,t>,<e,t>> (lambda $1:<e,t> (lambda $2:e ($0 $1 $2))))
been :- S\NP[x]/(S\NP[x]) : (lambda $0:<e,<e,t>> $0)
being :- S/S : (lambda $0:<e,t> $0)
bound :- S\NP : (lambda $0:e (lambda $1:e (and:<t*,t> (bound-01:<e,t> $1) (c_ARG0:<e,<e,t>> $1 $0))))
breakup :- N[sg] : (lambda $0:e (break-08:<e,t> $0))
briefing :- N[sg] : (lambda $0:e (brief-01:<e,t> $0))
budget :- N[sg] : (lambda $0:e (budget:<e,t> $0))
by :- N[x]\N[x]/S : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG2:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id $0))))))
by :- S\S/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG0:<e,<e,t>> $1 $0)))))
by :- S\S/NP : (lambda $1:e (lambda $0:<e,t> (lambda $2:e (and:<t*,t> ($0 $2) (c_ARG0:<e,<e,t>> $2 $1)))))
called :- N[x]\N[x]/NP[sg] : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_name:<e,<e,t>> $1 $0)))))
called :- S\NP : (lambda $0:e (lambda $1:e (and:<t*,t> (call-03:<e,t> $1) (c_ARG0:<e,<e,t>> $1 $0))))
cases :- N[pl] : (lambda $0:e (case:<e,t> $0))
ceremonies :- N[pl] : ceremony:<e,t>
chief :- N[sg]\(N[sg]/N[sg]) : (lambda $0:<<e,t>,<e,t>> (lambda $2:e (and:<t*,t> (have-org-role-91:<e,t> $2) (c_ARG2:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id ($0 chief:<e,t>))))))
cities :- N[pl] : city:<e,t>
clamp down :- N[sg] : (lambda $0:e (clamp-01:<e,t> $0))
closest :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_manner:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $5:e (and:<t*,t> (close:<e,t> $5) (c_degree:<e,<e,t>> $5 (a:<id,<<e,t>,e>> na:id most:<e,t>)))))))))
command :- N[sg] : command:<e,t>
community :- N[sg] : (lambda $0:e (community:<e,t> $0))
computer :- N[sg] : computer:<e,t>
considered :- S\NP/N[sg]/(NP[sg]/N[sg]) : (lambda $0:<<e,t>,e> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> (consider-01:<e,t> $3) (c_ARG1:<e,<e,t>> $3 ($0 (lambda $4:e (and:<t*,t> ($1 $4) (c_domain:<e,<e,t>> $4 $2))))))))))
consists :- S : consist-01:<e,t>
containers :- N[pl] : container:<e,t>
control :- S/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (control-01:<e,t> $1) (c_ARG0:<e,<e,t>> $1 (ref:<id,e> na:id)) (c_ARG1:<e,<e,t>> $1 $0))))
control :- S/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (control-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
countries :- N[pl] : (lambda $0:e (country:<e,t> $0))
crimes :- N[pl] : crime:<e,t>
daughter :- N[sg] : daughter:<e,t>
death :- N[nb] : die-01:<e,t>
demand :- N[sg] : (lambda $0:e (demand-01:<e,t> $0))
deployed :- S\NP : (lambda $1:e (lambda $2:e (and:<t*,t> (deploy-01:<e,t> $2) (c_ARG1:<e,<e,t>> $2 $1))))
destruction :- N[nb] : destroy-01:<e,t>
directly :- S\S : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (direct:<e,t> $2)))))))
dismissed :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (dismiss-02:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 $0)))))
disrupted :- S\NP : (lambda $0:e (lambda $1:e (and:<t*,t> (disrupt-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
dissemination :- N[sg] : (lambda $0:e (disseminate-01:<e,t> $0))
does :- S/(S\NP) : (lambda $0:<e,<e,t>> ($0 (ref:<id,e> na:id)))
dollars :- N[pl] : (lambda $0:e (and:<t*,t> (monetary-quantity:<e,t> $0) (c_unit:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id dollar:<e,t>))))
dollars :- N[pl] : (lambda $8:e (and:<t*,t> (monetary-quantity:<e,t> $8) (c_unit:<e,<e,t>> $8 (a:<id,<<e,t>,e>> na:id (lambda $9:e (dollar:<e,t> $9))))))
done :- S\NP[x]/(S\NP[x]) : (lambda $0:<e,<e,t>> $0)
dossier :- N[nb] : (lambda $0:e (dossier:<e,t> $0))
draft :- N[sg] : (lambda $0:e (draft-01:<e,t> $0))
e mail :- N[sg] : e-mail:<e,t>
each :- S\S : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id each:<e,t>)))))
early :- N[x]/N[x] : (lambda $1:<e,t> (lambda $0:e (and:<t*,t> ($1 $0) (c_time:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id early:<e,t>)))))
earthquake :- N[sg] : (lambda $0:e (earthquake:<e,t> $0))
efforts :- N[pl] : (lambda $0:e (effort:<e,t> $0))
eldest :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (old:<e,t> $0) (c_degree:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id most:<e,t>)))))))))
events :- N[pl] : event:<e,t>
executions :- N[pl] : execute-01:<e,t>
experts :- N[pl]\(N[pl]/N[pl]) : (lambda $0:<<e,t>,<e,t>> (lambda $6:e (and:<t*,t> (person:<e,t> $6) (c_ARG1-of:<e,<e,t>> $6 (a:<id,<<e,t>,e>> na:id ($0 expert-41:<e,t>))))))
extremism :- N[nb] : (lambda $0:e (extremism:<e,t> $0))
extremist :- N[sg] : (lambda $0:e (extremism:<e,t> $0))
far reaching :- S : (lambda $0:e (and:<t*,t> (reach-01:<e,t> $0) (c_extent:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id far:<e,t>))))
film :- N[nb] : (lambda $0:e (film:<e,t> $0))
firearms :- N[nb] : firearm:<e,t>
first :- N[sg]/N[sg] : (lambda $1:<e,t> (lambda $0:e (and:<t*,t> ($1 $0) (c_value:<e,<i,t>> $0 1:i))))
first :- N[sg]/N[sg] : (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ord:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (ordinal-entity:<e,t> $0) (c_value:<e,<i,t>> $0 1:i))))))))
flux :- N[nb] : flux-01:<e,t>
for :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG1:<e,<e,t>> $1 $0)))))
for :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_beneficiary:<e,<e,t>> $1 $0)))))
for :- S/(S\NP)/NP : (lambda $0:e (lambda $1:<e,<e,t>> ($1 $0)))
for :- S\S/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_destination:<e,<e,t>> $2 $0)))))
for :- S\S/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG1:<e,<e,t>> $1 $0)))))
former :- N[x]/N[x] : (lambda $1:<e,t> (lambda $0:e (and:<t*,t> ($1 $0) (c_mod:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (former:<e,t> $1)))))))
from :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG0:<e,<e,t>> $1 $0)))))
from :- S\S/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG2:<e,<e,t>> $1 $0)))))
government :- N[sg]\(N[sg]/N[sg]) : (lambda $0:<<e,t>,<e,t>> (lambda $1:e (and:<t*,t> (government-organization:<e,t> $1) (c_ARG0-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id ($0 govern-01:<e,t>))))))
group :- N[sg] : (lambda $0:e (group:<e,t> $0))
had :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (have-03:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 $0)))))
had :- S\NP[x]/(S\NP[x]) : (lambda $0:<e,<e,t>> $0)
hanging :- S : hang-01:<e,t>
hangings :- N[pl] : hang-01:<e,t>
has :- S/S : (lambda $0:<e,t> $0)
has :- S\NP[sg]/(S\NP[sg]) : (lambda $0:<e,<e,t>> $0)
has occurred :- A\NP : (lambda $0:e $0)
have :- S\NP[pl]/(S\NP[pl]) : (lambda $0:<e,<e,t>> $0)
have :- S\N[pl]/(S\N[pl]) : (lambda $0:<<e,t>,<e,t>> $0)
helicopters :- N[pl] : helicopter:<e,t>
human :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id human:<e,t>)))))
hundreds of millions :- NP[pl] : 100000000:i
impact :- N[sg]/S : (lambda $1:<e,t> (lambda $0:e (and:<t*,t> (impact-01:<e,t> $0) (c_ARG0-of:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id $1)))))
imports :- N[pl] : (lambda $0:e (import-01:<e,t> $0))
improve :- S/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (improve-01:<e,t> $1) (c_ARG0:<e,<e,t>> $1 (ref:<id,e> na:id)) (c_ARG1:<e,<e,t>> $1 $0))))
in :- N[x]\N[x]/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_location:<e,<e,t>> $2 $0)))))
in :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_location:<e,<e,t>> $1 $0)))))
in :- N[x]\N[x]/NP : (lambda $2:e (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_ARG1:<e,<e,t>> $1 $2)))))
in :- S\S/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_location:<e,<e,t>> $2 $0)))))
in :- S\S/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG1-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (cause-01:<e,t> $1) (c_ARG0:<e,<e,t>> $1 $0)))))))))
in :- S\S/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG2:<e,<e,t>> $1 $0)))))
in :- S\S/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_location:<e,<e,t>> $1 $0)))))
in :- S\S/NP : (lambda $2:e (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_time:<e,<e,t>> $1 $2)))))
in :- S\S/S : (lambda $0:<e,t> (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) ($0 $1)))))
including :- N[x]\N[x]/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG2-of:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id (lambda $3:e (and:<t*,t> (include-01:<e,t> $3) (c_ARG1:<e,<e,t>> $3 $0)))))))))
infect :- S/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (infect-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
initiate :- S/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (initiate-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
inoperable :- S\NP : (lambda $0:e (lambda $1:e (and:<t*,t> (possible:<e,t> $1) (c_polarity:<e,<e,t>> $1 -:e) (c_domain:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (operate-01:<e,t> $2) (c_ARG1:<e,<e,t>> $2 $0))))))))
inspectors :- N[pl] : (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_ARG0-of:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (inspect-01:<e,t> $1))))))
intelligence :- N[nb] : (lambda $0:e (intelligence:<e,t> $0))
international :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (international:<e,t> $0)))))))
into :- S\S/S : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) ($0 $2)))))
is :- A\NP[sg]/N[sg] : (lambda $0:<e,t> (lambda $1:e (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> ($0 $2) (c_domain:<e,<e,t>> $2 $1))))))
is :- A\NP[sg]/N[sg]/(NP[sg]/N[sg]) : (lambda $1:<<e,t>,e> (lambda $0:<e,t> (lambda $2:e ($1 (lambda $3:e (and:<t*,t> ($0 $3) (c_domain:<e,<e,t>> $3 $2)))))))
is :- S\NP/(S\NP) : (lambda $0:<e,<e,t>> $0)
is :- S\NP[sg]/(S\NP[sg]) : (lambda $0:<e,<e,t>> $0)
is :- S\NP[sg]/N[sg] : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (c_ARG0:<e,<e,t>> $2 $1)))))
is :- S\NP[sg]/N[sg] : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (c_ARG2:<e,<e,t>> $2 $1)))))
is :- S\N[sg]/(N[sg]/N[sg]) : (lambda $0:<<e,t>,<e,t>> (lambda $1:<e,t> ($0 $1)))
is a :- S\NP[sg]/N[sg] : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (c_domain:<e,<e,t>> $2 $1)))))
is in :- S\NP[sg]/N : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (c_ARG1:<e,<e,t>> $2 $1)))))
it :- NP[sg] : DUMMY:e
kidnapping :- N[nb] : kidnap-01:<e,t>
ktx :- N[sg] : (lambda $0:e (and:<t*,t> (railway-line:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 KTX:txt)))))))
launching :- N[sg] : (lambda $0:e (launch-01:<e,t> $0))
less than :- S/NP : (lambda $1:e (lambda $2:e (and:<t*,t> (less-than:<e,t> $2) (c_op1:<e,<e,t>> $2 $1))))
license :- N[sg] : (lambda $0:e (license-01:<e,t> $0))
limit :- S\NP/NP : (lambda $0:e (lambda $2:e (lambda $1:e (and:<t*,t> (limit-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0) (c_ARG0:<e,<e,t>> $1 $2)))))
little :- S/S : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_degree:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (little:<e,t> $0)))))))
make :- S\NP/NP : (lambda $0:e (lambda $2:e (lambda $1:e (and:<t*,t> (make-01:<e,t> $1) (c_ARG0:<e,<e,t>> $1 $2) (c_ARG1:<e,<e,t>> $1 $0)))))
manner :- N[nb] : manner:<e,t>
manufactured :- S\NP : (lambda $0:e (lambda $1:e (and:<t*,t> (manufacture-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
mark :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (mark-01:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 $0)))))
mass :- N[x]/N[x] : (lambda $1:<e,t> (lambda $0:e (and:<t*,t> ($1 $0) (c_degree:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (mass:<e,t> $1)))))))
material :- N[nb] : (lambda $0:e (material:<e,t> $0))
meaningful :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id meaningful:<e,t>)))))
member :- N[sg]\(N[x]/N[x]) : (lambda $1:<<e,t>,<e,t>> (lambda $0:e (and:<t*,t> (have-org-role-91:<e,t> $0) (c_ARG2:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id ($1 member:<e,t>))))))
militant :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id militant:<e,t>)))))
military :- N[sg] : (lambda $1:e (military:<e,t> $1))
military :- N[sg] : military:<e,t>
missile :- N[sg] : (lambda $0:e (missile:<e,t> $0))
movement :- N[sg] : movement:<e,t>
murder :- N[nb] : murder-01:<e,t>
nation :- N[sg] : nation:<e,t>
nations :- N[pl] : nation:<e,t>
necessary :- S : need-01:<e,t>
newspaper :- N[nb] : newspaper:<e,t>
no :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_polarity:<e,<e,t>> $1 -:e))))
not :- S/S : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_polarity:<e,<e,t>> $1 -:e))))
nuclear :- N[x]/N[x] : (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (nucleus:<e,t> $0)))))))
number :- N[sg] : (lambda $0:e (number:<e,t> $0))
occurred :- S : (lambda $0:e true:t)
of :- NP[pl]\NP/N[pl] : (lambda $0:<e,t> (lambda $1:e (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> ($0 $2) (c_quant:<e,<e,t>> $2 $1))))))
of :- NP[pl]\NP/N[pl] : (lambda $0:<e,t> (lambda $1:i (a:<id,<<e,t>,e>> na:id (lambda $7:e (and:<t*,t> (multiple:<e,t> $7) (c_op1:<e,<e,t>> $7 (a:<id,<<e,t>,e>> na:id (lambda $3:e (and:<t*,t> ($0 $3) (c_quant:<e,<i,t>> $3 $1))))))))))
of :- NP[x]\N/N[x] : (lambda $0:<e,t> (lambda $1:<e,t> (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> ($0 $2) (c_poss:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id $1)))))))
of :- N[nb]/N[x]/(N[x]/N[x])/(NP[x]/N[x]) : (lambda $0:<<e,t>,e> (lambda $1:<<e,t>,<e,t>> (lambda $2:<e,t> (lambda $3:e (and:<t*,t> ($2 $3) (c_ARG1-of:<e,<e,t>> $3 (a:<id,<<e,t>,e>> na:id (lambda $4:e (and:<t*,t> (include-91:<e,t> $4) (c_ARG2:<e,<e,t>> $4 ($0 ($1 $2))))))))))))
of :- N[x]/N[x]\(N[x]/N[x]) : (lambda $0:<<e,t>,<e,t>> $0)
of :- N[x]\NP/N[x] : (lambda $1:<e,t> (lambda $0:e (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG1-of:<e,<e,t>> $2 $0)))))
of :- N[x]\N[x]/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG0:<e,<e,t>> $2 $0)))))
of :- N[x]\N[x]/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG1:<e,<e,t>> $2 $0)))))
of :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG1:<e,<e,t>> $1 $0)))))
of :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG2-of:<e,<e,t>> $1 $0)))))
of :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_consist-of:<e,<e,t>> $1 $0)))))
of :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_source:<e,<e,t>> $1 $0)))))
of :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_topic:<e,<e,t>> $1 $0)))))
of :- S\S/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG2:<e,<e,t>> $2 $0)))))
of :- S\S/S : (lambda $0:<e,t> (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG1:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id $0))))))
offences :- N[pl] : offence:<e,t>
office :- N[sg] : (lambda $0:e (office:<e,t> $0))
official :- N[sg]\(N[sg]/N[sg]) : (lambda $0:<<e,t>,<e,t>> (lambda $1:e (and:<t*,t> (person:<e,t> $1) (c_ARG0-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id ($0 (lambda $2:e (and:<t*,t> (have-org-role-91:<e,t> $2) (c_ARG2:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id official:<e,t>))))))))))
old :- N[x]/N[x]\NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_age:<e,<e,t>> $2 $0)))))
on :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG1:<e,<e,t>> $1 $0)))))
on :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_topic:<e,<e,t>> $1 $0)))))
on :- S\S/NP[sg] : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_time:<e,<e,t>> $1 $0)))))
once :- NP[x]/NP[x] : (lambda $0:e $0)
online :- N[x]\N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_medium:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (online:<e,t> $0)))))))
open :- S/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (open-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
operate :- S : (lambda $0:e (and:<t*,t> (operate-01:<e,t> $0) (c_ARG1:<e,<e,t>> $0 (ref:<id,e> na:id))))
opium :- N[nb] : opium:<e,t>
or :- C : disj:e
order :- S/S : (lambda $0:<e,t> (lambda $1:e (c_purpose:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id $0))))
other :- N[nb] : other:<e,t>
other :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id other:<e,t>)))))
other :- N[x]/N[x] : (lambda $1:<e,t> (lambda $0:e (and:<t*,t> ($1 $0) (c_mod:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id other:<e,t>)))))
outside :- NP[x]/NP[x] : (lambda $1:e (a:<id,<<e,t>,e>> na:id (lambda $0:e (and:<t*,t> (outside:<e,t> $0) (c_op1:<e,<e,t>> $0 $1)))))
pacifist :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id pacifism:<e,t>)))))
phone :- N[sg] : phone:<e,t>
place :- S\N/(S\S) : (lambda $0:<<e,t>,<e,t>> (lambda $1:<e,t> ($0 $1)))
political :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (politics:<e,t> $0)))))))
political :- N[x]/N[x] : (lambda $2:<e,t> (lambda $0:e (and:<t*,t> ($2 $0) (c_ARG1:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (politics:<e,t> $1)))))))
pornographic :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (pornography:<e,t> $0)))))))
potential :- N[x]/N[x] : (lambda $1:<e,t> (lambda $0:e (and:<t*,t> ($1 $0) (c_mod:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id potential:<e,t>)))))
press :- N[sg] : (lambda $0:e (press:<e,t> $0))
pressured :- S/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (pressure-01:<e,t> $1) (c_ARG0:<e,<e,t>> $1 (ref:<id,e> na:id)) (c_ARG1:<e,<e,t>> $1 $0))))
prewar :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_time:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $12:e (and:<t*,t> (before:<e,t> $12) (c_op1:<e,<e,t>> $12 (a:<id,<<e,t>,e>> na:id (lambda $13:e (war:<e,t> $13)))))))))))
prisoners :- N[pl]\(N[pl]/N[pl]) : (lambda $0:<<e,t>,<e,t>> (lambda $1:e (and:<t*,t> (person:<e,t> $1) (c_ARG1-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id ($0 imprison-01:<e,t>))))))
produced :- S\NP : (lambda $0:e (lambda $1:e (and:<t*,t> (produce-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
producer :- N[sg] : produce-01:<e,t>
programs :- N[pl] : program:<e,t>
protest :- N[sg] : protest-01:<e,t>
publications :- N[pl] : (lambda $0:e (and:<t*,t> (thing:<e,t> $0) (c_ARG1-of:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (publish-01:<e,t> $1))))))
put :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 $0)))))
reactionary :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (reactionary:<e,t> $0)))))))
receiving :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (receive-01:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 $0)))))
record :- N[sg] : (lambda $0:e (record:<e,t> $0))
recording :- N[sg] : record-01:<e,t>
regarding :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG2:<e,<e,t>> $1 $0)))))
regular :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_frequency:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id regular:<e,t>)))))
release :- N[sg] : (lambda $0:e (release-01:<e,t> $0))
religious :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (religious:<e,t> $0)))))))
require :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (require-01:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG2:<e,<e,t>> $2 $0)))))
require :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (require-01:<e,t> $2) (c_ARG0:<e,<e,t>> $2 (ref:<id,e> na:id)) (c_ARG1:<e,<e,t>> $2 $0) (c_ARG2:<e,<e,t>> $2 $1)))))
revealed :- S\NP/NP : (lambda $2:e (lambda $0:e (lambda $1:e (and:<t*,t> (reveal-01:<e,t> $1) (c_ARG0:<e,<e,t>> $1 $0) (c_ARG1:<e,<e,t>> $1 $2)))))
rights :- N[nb] : (lambda $0:e (right:<e,t> $0))
risk :- N[sg] : (lambda $0:e (risk-01:<e,t> $0))
safeguard :- S/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (safeguard-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
said :- S\NP/S : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> (say-01:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id $0))))))
said :- S\NP/S : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> (say-01:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id (lambda $3:e ($0 $3))))))))
samples :- N[pl] : sample-01:<e,t>
seller :- N[sg] : (lambda $0:e (sell-01:<e,t> $0))
sentence :- N[sg] : sentence-01:<e,t>
separatists :- N[pl] : separatist:<e,t>
service :- N[nb] : service:<e,t>
since :- S\S/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_time:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (since:<e,t> $1) (c_op1:<e,<e,t>> $1 $0)))))))))
since :- S\S/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_time:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id (lambda $3:e (and:<t*,t> (since:<e,t> $3) (c_op1:<e,<e,t>> $3 $0)))))))))
sites :- N[pl] : site:<e,t>
soil :- N[nb] : soil:<e,t>
spend :- S\NP/NP : (lambda $7:e (lambda $1:e (lambda $4:e (and:<t*,t> (spend-01:<e,t> $4) (c_ARG0:<e,<e,t>> $4 $1) (c_ARG3:<e,<e,t>> $4 $7)))))
sponsor :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (sponsor-01:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 $0)))))
sq Hell :- N[sg] : (lambda $0:e (and:<t*,t> (product:<e,t> $0) (c_name:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (name:<e,t> $1) (c_op:<e,<txt,t>> $1 SQ++Hell:txt)))))))
state :- N[sg] : state:<e,t>
stated :- S\NP : (lambda $0:e (lambda $1:e (and:<t*,t> (state-01:<e,t> $1) (c_ARG0:<e,<e,t>> $1 $0))))
stated :- S\NP/S : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> (state-01:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id $0))))))
stated :- S\NP/S : (lambda $2:<e,t> (lambda $0:e (lambda $1:e (and:<t*,t> (state-01:<e,t> $1) (c_ARG0:<e,<e,t>> $1 $0) (c_ARG1:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id $2))))))
statement :- N[sg] : (lambda $0:e (state-01:<e,t> $0))
statement :- N[sg] : (lambda $11:e (and:<t*,t> (thing:<e,t> $11) (c_ARG1-of:<e,<e,t>> $11 (a:<id,<<e,t>,e>> na:id (lambda $12:e (and:<t*,t> (state-01:<e,t> $12) (c_ARG0:<e,<e,t>> $12 (ref:<id,e> na:id))))))))
strategic :- N[x]/N[x] : (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $0:e (strategy:<e,t> $0)))))))
style :- N[nb] : style:<e,t>
such as :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_example:<e,<e,t>> $1 $0)))))
suspected :- S : (lambda $0:e (suspect-01:<e,t> $0))
taking :- S\NP/N/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($1 $3) (c_ARG0:<e,<e,t>> $3 $2) (c_ARG1:<e,<e,t>> $3 $0))))))
talks :- N[pl] : talk-01:<e,t>
technology :- N[nb] : (lambda $0:e (technology:<e,t> $0))
terrorism :- N[nb] : (lambda $6:e (terrorism:<e,t> $6))
terrorism :- N[nb] : terrorism:<e,t>
that :- NP/S : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id $0))
that :- NP[x]/NP[x] : (lambda $0:e $0)
that :- NP[x]\NP[x]/S : (lambda $0:<e,t> (lambda $1:e (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> ($0 $2) (c_ord:<e,<e,t>> $2 $1))))))
that :- N[x]\N[x]/S : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) ($0 $2)))))
that :- N[x]\N[x]/S : (lambda $0:<e,t> (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG1:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id $0))))))
that :- S/S : (lambda $0:<e,t> $0)
that :- S\S : (lambda $0:<e,t> $0)
the :- NP[x]/N[x] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id $0))
the :- NP[x]/N[x] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id (lambda $1:e ($0 $1))))
the country :- NP[sg] : (ref:<id,e> na:id)
then :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_time:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id then:<e,t>)))))
these :- NP[pl]/N[pl] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $4:e (this:<e,t> $4))))))))
they :- NP[pl] : (ref:<id,e> na:id)
this :- NP[sg] : DUMMY:e
threats :- N[pl] : (lambda $0:e (threaten-01:<e,t> $0))
time :- N[sg] : (lambda $0:e (ordinal-entity:<e,t> $0))
to  :- S\NP[x]/(S\NP[x]) : (lambda $0:<e,<e,t>> $0)
to :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG0:<e,<e,t>> $1 $0)))))
to :- N[x]\N[x]/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG1:<e,<e,t>> $1 $0)))))
to :- N[x]\N[x]/NP : (lambda $2:e (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_ARG1:<e,<e,t>> $1 $2)))))
to :- N[x]\N[x]/S : (lambda $0:<e,t> (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG1:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id $0))))))
to :- S/S : (lambda $0:<e,t> $0)
to :- S\NP[x]/(S\NP[x]) : (lambda $0:<e,<e,t>> $0)
to :- S\S/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG2:<e,<e,t>> $2 $0)))))
to :- S\S/NP : (lambda $0:e (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG2:<e,<e,t>> $1 $0)))))
to :- S\S/S : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG1:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id $0))))))
to :- S\S/S : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_purpose:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id $0))))))
to :- S\S/S : (lambda $0:<e,t> (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG1:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id $0))))))
to :- S\S/S : (lambda $0:<e,t> (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG2:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id $0))))))
took :- S/S : (lambda $0:<e,t> $0)
top :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id top:<e,t>)))))
trans Atlantic :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id trans-atlantic:<e,t>)))))
transfer :- N[sg] : transfer-01:<e,t>
transferred :- S : (lambda $0:e (transfer-01:<e,t> $0))
treason :- N[nb] : betray-01:<e,t>
troops :- N[pl] : troop:<e,t>
type :- N[sg] : type:<e,t>
umbrella :- N[sg] : (lambda $0:e (umbrella:<e,t> $0))
unarmed :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_ARG1-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (arm-01:<e,t> $2) (c_polarity:<e,<e,t>> $2 -:e))))))))
unfair :- S : (lambda $0:e (c_ARG2:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id unfair:<e,t>)))
unlike :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (resemble-01:<e,t> $2) (c_polarity:<e,<e,t>> $2 -:e) (c_ARG1:<e,<e,t>> $2 $1) (c_ARG2:<e,<e,t>> $2 $0)))))
use :- S : use-01:<e,t>
used :- S/S : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (use-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 (ref:<id,e> na:id)) (c_ARG2:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id $0)))))
user :- N[sg] : (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_ARG0-of:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id use-01:<e,t>))))
using :- S/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (use-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
violence :- N[nb] : (lambda $0:e (violence:<e,t> $0))
virus :- N[sg] : virus:<e,t>
visit :- N[sg] : (lambda $0:e (visit-01:<e,t> $0))
visited :- S/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (visit-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
voice :- N[nb] : voice:<e,t>
wage :- S\NP/NP : (lambda $0:e (lambda $1:e (lambda $2:e (and:<t*,t> (wage-01:<e,t> $2) (c_ARG0:<e,<e,t>> $2 $1) (c_ARG1:<e,<e,t>> $2 $0)))))
wanted :- S\NP : (lambda $0:e (lambda $1:e (and:<t*,t> (want-01:<e,t> $1) (c_ARG1:<e,<e,t>> $1 $0))))
war :- N[nb] : war:<e,t>
was :-  S\NP[x]/(S\NP[x]) : (lambda $0:<e,<e,t>> $0)
was :- S\(NP[x]/N[x])\N[sg]/N[nb] : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:<<e,t>,e> (lambda $3:e (and:<t*,t> ($0 $3) (c_ARG1-of:<e,<e,t>> $3 ($2 $1)))))))
was :- S\NP/(S\NP) : (lambda $0:<e,<e,t>> $0)
was :- S\NP[sg]/(S\NP[sg]) : (lambda $0:<e,<e,t>> $0)
was :- S\NP[sg]/(S\NP[sg]) : (lambda $0:<e,<e,t>> (lambda $1:e (lambda $2:e ($0 $1 $2))))
was :- S\N[sg]/NP[sg] : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG0-of:<e,<e,t>> $2 $0)))))
water :- N[nb] : water:<e,t>
weapons :- N[pl] : (lambda $0:e (weapon:<e,t> $0))
weapons :- N[pl] : weapon:<e,t>
websites :- N[pl] : (lambda $0:e (website:<e,t> $0))
were :- S\NP[pl]/(S\NP[pl]) : (lambda $0:<e,<e,t>> $0)
were :- S\NP[pl]/S : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> (cost-01:<e,t> $2) (c_ARG1:<e,<e,t>> $2 $1) (c_ARG2:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id $0))))))
who :- N[x]\N[x]/S : (lambda $0:<e,t> (lambda $2:<e,t> (lambda $1:e (and:<t*,t> ($2 $1) (c_ARG0-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id $0))))))
will :- S\NP[x]/(S\NP[x]) : (lambda $0:<e,<e,t>> $0)
with :- N[x]\N[x]/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_ARG2:<e,<e,t>> $2 $0)))))
workshop :- N[sg] : workshop:<e,t>
world :- N[sg] : world:<e,t>
worm :- N[sg] : worm:<e,t>
would :- S/S : (lambda $0:<e,t> $0)
would :- S\NP[x]/(S\NP[x]) : (lambda $0:<e,<e,t>> $0)
years :- N[pl] : (lambda $0:e (and:<t*,t> (temporal-quantity:<e,t> $0) (c_unit:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id year:<e,t>))))
//
//
//
drug related :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_ARG1-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (relate-01:<e,t> $2) (c_ARG2:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id (lambda $3:e (drug:<e,t> $3)))))))))))
Commander :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_ARG0-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (have-org-role-91:<e,t> $2) (c_ARG2:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id (lambda $3:e (commander:<e,t> $3)))))))))))
near :- N[x]\N[x]/NP : (lambda $0:e (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($1 $2) (c_location:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id (lambda $3:e (and:<t*,t> (near:<e,t> $3) (c_op1:<e,<e,t>> $3 $0)))))))))
non proliferation :- N[x]/N[x] : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (c_mod:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> (proliferate-01:<e,t> $2) (c_polarity:<e,<e,t>> $2 -:e))))))))
twelve :- NP[pl]/N[pl] : (lambda $0:<e,t> (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> ($0 $1) (c_quant:<e,<i,t>> $1 12:i)))))
judge :- N[sg] : (lambda $0:e (and:<t*,t> (person:<e,t> $0) (c_ARG0-of:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (and:<t*,t> (have-org-role-91:<e,t> $1) (c_ARG3:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (judge-01:<e,t> $2))))))))))
after :- S/S : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (after:<e,t> $1) (c_op1:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e ($0 $2)))))))
spokesman :- N[sg]/(N[sg]\N[sg]) : (lambda $0:<<e,t>,<e,t>> (lambda $1:e (and:<t*,t> (person:<e,t> $1) (c_ARG0-of:<e,<e,t>> $1 (a:<id,<<e,t>,e>> na:id (lambda $2:e (and:<t*,t> ($0 have-org-role-91:<e,t> $2) (c_ARG2:<e,<e,t>> $2 (a:<id,<<e,t>,e>> na:id (lambda $3:e (spokesman:<e,t> $3)))))))))))
chairmanship :- N[sg] : (lambda $0:e (and:<t*,t> (have-org-role-91:<e,t> $0) (c_ARG2:<e,<e,t>> $0 (a:<id,<<e,t>,e>> na:id (lambda $1:e (chairman:<e,t> $1))))))
